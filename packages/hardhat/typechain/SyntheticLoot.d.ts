/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
  BaseContract,
  ContractTransaction,
  CallOverrides,
} from "ethers";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";
import { TypedEventFilter, TypedEvent, TypedListener } from "./commons";

interface SyntheticLootInterface extends ethers.utils.Interface {
  functions: {
    "chestComponents(address)": FunctionFragment;
    "footComponents(address)": FunctionFragment;
    "getChest(address)": FunctionFragment;
    "getFoot(address)": FunctionFragment;
    "getHand(address)": FunctionFragment;
    "getHead(address)": FunctionFragment;
    "getNeck(address)": FunctionFragment;
    "getRing(address)": FunctionFragment;
    "getWaist(address)": FunctionFragment;
    "getWeapon(address)": FunctionFragment;
    "handComponents(address)": FunctionFragment;
    "headComponents(address)": FunctionFragment;
    "neckComponents(address)": FunctionFragment;
    "ringComponents(address)": FunctionFragment;
    "tokenURI(address)": FunctionFragment;
    "waistComponents(address)": FunctionFragment;
    "weaponComponents(address)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "chestComponents",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "footComponents",
    values: [string]
  ): string;
  encodeFunctionData(functionFragment: "getChest", values: [string]): string;
  encodeFunctionData(functionFragment: "getFoot", values: [string]): string;
  encodeFunctionData(functionFragment: "getHand", values: [string]): string;
  encodeFunctionData(functionFragment: "getHead", values: [string]): string;
  encodeFunctionData(functionFragment: "getNeck", values: [string]): string;
  encodeFunctionData(functionFragment: "getRing", values: [string]): string;
  encodeFunctionData(functionFragment: "getWaist", values: [string]): string;
  encodeFunctionData(functionFragment: "getWeapon", values: [string]): string;
  encodeFunctionData(
    functionFragment: "handComponents",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "headComponents",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "neckComponents",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "ringComponents",
    values: [string]
  ): string;
  encodeFunctionData(functionFragment: "tokenURI", values: [string]): string;
  encodeFunctionData(
    functionFragment: "waistComponents",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "weaponComponents",
    values: [string]
  ): string;

  decodeFunctionResult(
    functionFragment: "chestComponents",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "footComponents",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "getChest", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "getFoot", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "getHand", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "getHead", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "getNeck", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "getRing", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "getWaist", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "getWeapon", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "handComponents",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "headComponents",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "neckComponents",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "ringComponents",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "tokenURI", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "waistComponents",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "weaponComponents",
    data: BytesLike
  ): Result;

  events: {};
}

export class SyntheticLoot extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  listeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter?: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): Array<TypedListener<EventArgsArray, EventArgsObject>>;
  off<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  on<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  once<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeListener<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeAllListeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): this;

  listeners(eventName?: string): Array<Listener>;
  off(eventName: string, listener: Listener): this;
  on(eventName: string, listener: Listener): this;
  once(eventName: string, listener: Listener): this;
  removeListener(eventName: string, listener: Listener): this;
  removeAllListeners(eventName?: string): this;

  queryFilter<EventArgsArray extends Array<any>, EventArgsObject>(
    event: TypedEventFilter<EventArgsArray, EventArgsObject>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEvent<EventArgsArray & EventArgsObject>>>;

  interface: SyntheticLootInterface;

  functions: {
    chestComponents(
      walletAddress: string,
      overrides?: CallOverrides
    ): Promise<[[BigNumber, BigNumber, BigNumber, BigNumber, BigNumber]]>;

    footComponents(
      walletAddress: string,
      overrides?: CallOverrides
    ): Promise<[[BigNumber, BigNumber, BigNumber, BigNumber, BigNumber]]>;

    getChest(
      walletAddress: string,
      overrides?: CallOverrides
    ): Promise<[string]>;

    getFoot(
      walletAddress: string,
      overrides?: CallOverrides
    ): Promise<[string]>;

    getHand(
      walletAddress: string,
      overrides?: CallOverrides
    ): Promise<[string]>;

    getHead(
      walletAddress: string,
      overrides?: CallOverrides
    ): Promise<[string]>;

    getNeck(
      walletAddress: string,
      overrides?: CallOverrides
    ): Promise<[string]>;

    getRing(
      walletAddress: string,
      overrides?: CallOverrides
    ): Promise<[string]>;

    getWaist(
      walletAddress: string,
      overrides?: CallOverrides
    ): Promise<[string]>;

    getWeapon(
      walletAddress: string,
      overrides?: CallOverrides
    ): Promise<[string]>;

    handComponents(
      walletAddress: string,
      overrides?: CallOverrides
    ): Promise<[[BigNumber, BigNumber, BigNumber, BigNumber, BigNumber]]>;

    headComponents(
      walletAddress: string,
      overrides?: CallOverrides
    ): Promise<[[BigNumber, BigNumber, BigNumber, BigNumber, BigNumber]]>;

    neckComponents(
      walletAddress: string,
      overrides?: CallOverrides
    ): Promise<[[BigNumber, BigNumber, BigNumber, BigNumber, BigNumber]]>;

    ringComponents(
      walletAddress: string,
      overrides?: CallOverrides
    ): Promise<[[BigNumber, BigNumber, BigNumber, BigNumber, BigNumber]]>;

    tokenURI(
      walletAddress: string,
      overrides?: CallOverrides
    ): Promise<[string]>;

    waistComponents(
      walletAddress: string,
      overrides?: CallOverrides
    ): Promise<[[BigNumber, BigNumber, BigNumber, BigNumber, BigNumber]]>;

    weaponComponents(
      walletAddress: string,
      overrides?: CallOverrides
    ): Promise<[[BigNumber, BigNumber, BigNumber, BigNumber, BigNumber]]>;
  };

  chestComponents(
    walletAddress: string,
    overrides?: CallOverrides
  ): Promise<[BigNumber, BigNumber, BigNumber, BigNumber, BigNumber]>;

  footComponents(
    walletAddress: string,
    overrides?: CallOverrides
  ): Promise<[BigNumber, BigNumber, BigNumber, BigNumber, BigNumber]>;

  getChest(walletAddress: string, overrides?: CallOverrides): Promise<string>;

  getFoot(walletAddress: string, overrides?: CallOverrides): Promise<string>;

  getHand(walletAddress: string, overrides?: CallOverrides): Promise<string>;

  getHead(walletAddress: string, overrides?: CallOverrides): Promise<string>;

  getNeck(walletAddress: string, overrides?: CallOverrides): Promise<string>;

  getRing(walletAddress: string, overrides?: CallOverrides): Promise<string>;

  getWaist(walletAddress: string, overrides?: CallOverrides): Promise<string>;

  getWeapon(walletAddress: string, overrides?: CallOverrides): Promise<string>;

  handComponents(
    walletAddress: string,
    overrides?: CallOverrides
  ): Promise<[BigNumber, BigNumber, BigNumber, BigNumber, BigNumber]>;

  headComponents(
    walletAddress: string,
    overrides?: CallOverrides
  ): Promise<[BigNumber, BigNumber, BigNumber, BigNumber, BigNumber]>;

  neckComponents(
    walletAddress: string,
    overrides?: CallOverrides
  ): Promise<[BigNumber, BigNumber, BigNumber, BigNumber, BigNumber]>;

  ringComponents(
    walletAddress: string,
    overrides?: CallOverrides
  ): Promise<[BigNumber, BigNumber, BigNumber, BigNumber, BigNumber]>;

  tokenURI(walletAddress: string, overrides?: CallOverrides): Promise<string>;

  waistComponents(
    walletAddress: string,
    overrides?: CallOverrides
  ): Promise<[BigNumber, BigNumber, BigNumber, BigNumber, BigNumber]>;

  weaponComponents(
    walletAddress: string,
    overrides?: CallOverrides
  ): Promise<[BigNumber, BigNumber, BigNumber, BigNumber, BigNumber]>;

  callStatic: {
    chestComponents(
      walletAddress: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber, BigNumber, BigNumber, BigNumber, BigNumber]>;

    footComponents(
      walletAddress: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber, BigNumber, BigNumber, BigNumber, BigNumber]>;

    getChest(walletAddress: string, overrides?: CallOverrides): Promise<string>;

    getFoot(walletAddress: string, overrides?: CallOverrides): Promise<string>;

    getHand(walletAddress: string, overrides?: CallOverrides): Promise<string>;

    getHead(walletAddress: string, overrides?: CallOverrides): Promise<string>;

    getNeck(walletAddress: string, overrides?: CallOverrides): Promise<string>;

    getRing(walletAddress: string, overrides?: CallOverrides): Promise<string>;

    getWaist(walletAddress: string, overrides?: CallOverrides): Promise<string>;

    getWeapon(
      walletAddress: string,
      overrides?: CallOverrides
    ): Promise<string>;

    handComponents(
      walletAddress: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber, BigNumber, BigNumber, BigNumber, BigNumber]>;

    headComponents(
      walletAddress: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber, BigNumber, BigNumber, BigNumber, BigNumber]>;

    neckComponents(
      walletAddress: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber, BigNumber, BigNumber, BigNumber, BigNumber]>;

    ringComponents(
      walletAddress: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber, BigNumber, BigNumber, BigNumber, BigNumber]>;

    tokenURI(walletAddress: string, overrides?: CallOverrides): Promise<string>;

    waistComponents(
      walletAddress: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber, BigNumber, BigNumber, BigNumber, BigNumber]>;

    weaponComponents(
      walletAddress: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber, BigNumber, BigNumber, BigNumber, BigNumber]>;
  };

  filters: {};

  estimateGas: {
    chestComponents(
      walletAddress: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    footComponents(
      walletAddress: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getChest(
      walletAddress: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getFoot(
      walletAddress: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getHand(
      walletAddress: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getHead(
      walletAddress: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getNeck(
      walletAddress: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getRing(
      walletAddress: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getWaist(
      walletAddress: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getWeapon(
      walletAddress: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    handComponents(
      walletAddress: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    headComponents(
      walletAddress: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    neckComponents(
      walletAddress: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    ringComponents(
      walletAddress: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    tokenURI(
      walletAddress: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    waistComponents(
      walletAddress: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    weaponComponents(
      walletAddress: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    chestComponents(
      walletAddress: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    footComponents(
      walletAddress: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getChest(
      walletAddress: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getFoot(
      walletAddress: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getHand(
      walletAddress: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getHead(
      walletAddress: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getNeck(
      walletAddress: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getRing(
      walletAddress: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getWaist(
      walletAddress: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getWeapon(
      walletAddress: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    handComponents(
      walletAddress: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    headComponents(
      walletAddress: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    neckComponents(
      walletAddress: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    ringComponents(
      walletAddress: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    tokenURI(
      walletAddress: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    waistComponents(
      walletAddress: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    weaponComponents(
      walletAddress: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
